var fs = require('fs');

var routing_table = {};

var webroot = __dirname + '/../../templates';

//////////////
//    All the various ways to tell the server "it's this kind of file"
//
var header_handlers = {};
function add_header_handler(key, type) {
	key = key.toLowerCase();
	header_handlers[key] = function(resp, length) {
		resp.writeHead(
			200,
			{
				'Content-Length': length,
				'Content-Type': type,
			}
		);
	}
}
var mime_types = {
	'js' : 'application/javascript',
	'html' : 'text/html',
	'jpeg' : 'image/jpeg',
	'jpg' : 'image/jpeg',
	'css' : 'text/css',
	'png' : 'image/png'	
};
for ( type in mime_types ) {
	add_header_handler( type, mime_types[type] );
}
function get_header_handler(key) { return header_handlers[ key.toLowerCase() ] }
//////////////


var defaultHandler = function(req, resp) {
	var body = '<h1>The page you requested could not be found</h1>';
	(get_header_handler('html'))(resp, body.length);
	resp.end(body);
}

function create_page(urlPath, filePath) {
	add_handler(   
		urlPath,
		function(req, resp) {
			fs.readFile(
				filePath,
				'utf8',
				function (err, data) {
					(get_header_handler('html'))(resp, data.length);
					resp.end(data);
				}
			)
		}
	);	
}
create_page('/', __dirname + '/../../templates//assets/html/home.html');      // Home page
create_page('/test', __dirname + '/../../templates/assets/html/test.html');  // Test page

add_handler('/home/edit', function(req, resp) {
	console.log("##### ENTERING HOME EDIT FUNC");
});

function assetHandler(req, resp) {
	var path = url.parse(req.url).pathname;
	var results = path.match(/^.+\.(.+)$/);
	var extension = results[ results.length -1 ];

	fs.readFile(
		webroot + path,
		'utf8',
		function (err, data) {
			if (err) { console.log("Failed to load ", webroot + path, ".  Error was: " + err); }
			else {
				var handler = get_header_handler(extension);
				handler(resp, data.length);
				resp.end(data)
			};
		}
	)
}

function add_handler(path, func) { routing_table[path] = func }

function get_handler(path) {
	if ( path.match(/^\/assets\//) ) { return assetHandler }
	return routing_table[path] || defaultHandler;
}

exports.get_handler = get_handler;
exports.add_handler = add_handler;
